11.64989
7.63806
6.90797
7.10440
7.10440
0.00000
19.19427
18.45644
12.10010
12.10010
19.19427
18.45644
12.10010
12.10010
3.10161
12.46846
12.46846
10.03855
10.03855
0.00000
distancia <- c(0.00000	2.91548	2.91548	13.47368	13.47368	7.09366	5.23259	5.55360	5.55360	2.91548	2.91548	13.47368	13.47368	7.09366	5.23259	5.55360	5.55360	0.00000	11.64989	11.64989	7.63806	6.90797	7.10440	7.10440	11.64989	11.64989	7.63806	6.90797	7.10440	7.10440	0.00000	19.19427	18.45644	12.10010	12.10010	19.19427	18.45644	12.10010	12.10010	3.10161	12.46846	12.46846	10.03855	10.03855	0.00000
)
distancia <- c(0.00000,	2.91548,	2.91548,	13.47368,	13.47368,	7.09366,	5.23259,	5.55360,	5.55360,	2.91548,	2.91548,	13.47368,	13.47368,	7.09366,	5.23259,	5.55360,	5.55360,	0.00000,	11.64989,	11.64989,	7.63806,	6.90797,	7.10440,	7.10440,	11.64989,	11.64989,	7.63806,	6.90797,	7.10440,	7.10440,	0.00000,	19.19427,	18.45644,	12.10010,	12.10010,	19.19427,	18.45644,	12.10010,	12.10010,	3.10161,	12.46846,	12.46846,	10.03855,	10.03855,	0.00000)
corpat <- c(0.16757,	-0.16828,	-0.04000,	-0.14233,	0.01278,	0.01683,	-0.01514,	-0.08396,	0.04398,	-0.07289,	0.01077,	-0.14568,	-0.03664,	0.01136,	-0.08685,	-0.02622,	0.03860,	0.04559,	0.01141,	0.03414,	-0.03893,	0.14819,	-0.07313,	-0.09497,	-0.06117,	0.02173,	-0.00491,	-0.08353,	0.03730,	-0.07568,	-0.00048,	-0.00483,	-0.04504,	0.05127,	-0.02563,	-0.00414,	-0.06990,	0.01645,	-0.00138,	0.07563,	0.02475,	-0.02916,	-0.12683,	-0.10793,	0.02370)
cor.test(x=distancia, y=corpat,method = "spearman")
plot(distancia, corpat)
abline(lm(distancia~corpat)
col="red"
abline(lm(distancia~corpat))
plot(distancia, corpat)
abline(lm(distancia~corpat))
lm(distancia~corpat)
abline(lm(corpat~distancia))
plot(distancia, corpat)
abline(lm(corpat~distancia))
distancia <- c(1.65529,	1.65529,	12.57060,	13.50000,	7.27186,	7.27186,	5.90762,	6.03345,	10.61567,	0.00000,	11.64989,	13.93449,	7.63806,	7.63806,	6.90797,	7.10440,	8.96674,	11.64989,	13.93449,	7.63806,	7.63806,	6.90797,	7.10440,	8.96674,	25.44661,	19.19427,	19.19427,	18.45644,	12.10010,	9.66863,	6.29683,	6.29683,	8.15414,	18.19265,	19.39620,	0.00000,	3.10161,	12.46846,	13.97542,	3.10161,	12.46846,	13.97542,	10.03855,	14.85539,	14.59537
)
corpat <- c(-0.08558,	0.01767,	-0.05152,	-0.02002,	-0.06697,	-0.05013,	0.12113,	0.02262,	0.03550,	0.02227,	0.02939,	-0.04738,	0.03210,	0.02206,	-0.05913,	0.00265,	0.00788,	0.01956,	0.00974,	-0.00409,	0.06683,	-0.13040,	-0.06426,	-0.00666,	0.03141,	0.07656,	0.04308,	-0.14861,	-0.00575,	-0.13465,	0.01956,	0.05109,	-0.22655,	-0.00553,	-0.06024,	0.00801,	-0.09626,	-0.03305,	-0.13152,	-0.13354,	-0.05838,	0.01549,	0.05145,	0.30803,	-0.05523
)
plot(distancia, corpat)
abline(lm(corpat~distancia))
cor.test(x=distancia, y=corpat,method = "spearman")
distancia <- c(1.65529,	1.65529,	12.57060,	13.50000,	7.27186,	7.27186,	6.03345,	10.61567,	10.61567,	0.00000,	11.64989,	13.93449,	7.63806,	7.63806,	7.10440,	8.96674,	8.96674,	11.64989,	13.93449,	7.63806,	7.63806,	7.10440,	8.96674,	8.96674,	25.44661,	19.19427,	19.19427,	12.10010,	9.66863,	9.66863,	6.29683,	6.29683,	18.19265,	19.39620,	19.39620,	0.00000,	12.46846,	13.97542,	13.97542,	12.46846,	13.97542,	13.97542,	14.59537,	14.59537,	0.00000
)
corpat <- c(-0.07601,	0.02175,	-0.04262,	-0.01971,	-0.05407,	-0.04593,	0.02910,	0.05021,	0.04265,	0.01057,	0.02121,	-0.06541,	0.02878,	0.01251,	0.00633,	0.02468,	-0.02082,	0.00349,	-0.01607,	-0.01601,	0.04860,	-0.06920,	0.00962,	0.02113,	0.01262,	0.06921,	0.02530,	-0.00446,	-0.12567,	-0.11436,	0.00224,	0.02316,	-0.01482,	-0.05761,	-0.02617,	-0.00240,	-0.02863,	-0.12346,	-0.10992,	-0.06341,	0.03299,	0.01245,	-0.03659,	0.04416,	0.27866
)
cor.test(x=distancia, y=corpat,method = "spearman")
plot(distancia, corpat)
abline(lm(corpat~distancia))
distancia <- c(0.00000,	0.00000,	14.49000,	9.02718,	6.36003,	10.69462,	10.69462,	14.57918,	0.00000,	14.49000,	9.02718,	6.36003,	10.69462,	10.69462,	14.57918,	14.49000,	9.02718,	6.36003,	10.69462,	10.69462,	14.57918,	6.29683,	8.15414,	4.79113,	4.79113,	19.39620,	3.10161,	5.23096,	5.23096,	13.97542,	4.98968,	4.98968,	14.85539,	0.00000,	19.13114,	19.13114
)
corpat <- c(-0.04596,	0.04750,	-0.04210,	-0.02040,	-0.00151,	0.04081,	-0.02420,	-0.09427,	0.00251,	-0.06511,	-0.06025,	0.01743,	0.01359,	-0.00748,	-0.02584,	-0.04264,	0.05876,	-0.03340,	0.01736,	0.03122,	-0.09408,	0.08961,	-0.02110,	0.04911,	-0.00366,	0.05797,	-0.06262,	0.09476,	0.03248,	-0.01728,	-0.02651,	-0.04079,	-0.00843,	-0.14583,	-0.20027,	0.11130
)
cor.test(x=distancia, y=corpat,method = "spearman")
plot(distancia, corpat)
abline(lm(corpat~distancia))
corpat <- c(-0.04596,	0.04750,	-0.04210,	-0.02040,	-0.00151,	0.04081,	-0.02420,	-0.09427,	0.00251,	-0.06511,	-0.06025,	0.01743,	0.01359,	-0.00748,	-0.02584,	-0.04264,	0.05876,	-0.03340,	0.01736,	0.03122,	-0.09408,	0.08961,	-0.02110,	0.04911,	-0.00366,	0.05797,	-0.06262,	0.09476,	0.03248,	-0.01728,	-0.02651,	-0.04079,	-0.00843,	-0.14583,	-0.20027,	0.11130
distancia <- c(0.00000,	0.00000,	14.49000,	9.02718,	6.36003,	10.69462,	10.69462,	14.57918,	0.00000,	14.49000,	9.02718,	6.36003,	10.69462,	10.69462,	14.57918,	14.49000,	9.02718,	6.36003,	10.69462,	10.69462,	14.57918,	6.29683,	8.15414,	4.79113,	4.79113,	19.39620,	3.10161,	5.23096,	5.23096,	13.97542,	4.98968,	4.98968,	14.85539,	0.00000,	19.13114,	19.13114
distancia <- c(0.00000,	0.00000,	14.49000,	9.02718,	6.36003,	10.69462,	10.69462,	14.57918,	0.00000,	14.49000,	9.02718,	6.36003,	10.69462,	10.69462,	14.57918,	14.49000,	9.02718,	6.36003,	10.69462,	10.69462,	14.57918,	6.29683,	8.15414,	4.79113,	4.79113,	19.39620,	3.10161,	5.23096,	5.23096,	13.97542,	4.98968,	4.98968,	14.85539,	0.00000,	19.13114,	19.13114)
plot(distancia, corpat)
corpat <- c(-0.07601,	0.02175,	-0.04262,	-0.01971,	-0.05407,	-0.04593,	0.02910,	0.05021,	0.04265,	0.01057,	0.02121,	-0.06541,	0.02878,	0.01251,	0.00633,	0.02468,	-0.02082,	0.00349,	-0.01607,	-0.01601,	0.04860,	-0.06920,	0.00962,	0.02113,	0.01262,	0.06921,	0.02530,	-0.00446,	-0.12567,	-0.11436,	0.00224,	0.02316,	-0.01482,	-0.05761,	-0.02617,	-0.00240,	-0.02863,	-0.12346,	-0.10992,	-0.06341,	0.03299,	0.01245,	-0.03659,	0.04416,	0.278669)
plot(distancia, corpat)
max(distancia)
cite(circular)
library(circular)
cite()
cite(keys = circular)
cite(circular)
cite("circular")
citation("circular")
citation(R)
citation("R")
citation("stats")
citation("fitdistrplus")
install.packages(spatstat)
install.packages("spatstat")
library(spatstat)
t
load("~/Documents/Maestria/Estadistica/Analisis autocorrelacion.RData")
View(inflsM)
View(inflsM)
View(RhoH1)
install.packages(c("AICcmodavg", "BH", "DBI", "Formula", "Hmisc", "MASS", "MasterBayes", "Matrix", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "Rvmmin", "ade4", "ape", "assertthat", "backports", "boot", "checkmate", "circular", "cluster", "corpcor", "cowplot", "cubature", "data.table", "deldir", "digest", "dplyr", "evaluate", "fastmatch", "fitdistrplus", "foreign", "formatR", "gamlss", "gamlss.dist", "gdata", "goftest", "gridExtra", "htmlTable", "htmltools", "httpuv", "igraph", "irlba", "jsonlite", "knitr", "lattice", "lme4", "lmomco", "markdown", "mgcv", "mvtnorm", "nlme", "pegas", "phangorn", "polyclip", "poppr", "poweRlaw", "pscl", "reshape", "rmarkdown", "rpart", "scales", "segmented", "seqinr", "shiny", "sourcetools", "sp", "spatstat", "spdep", "stringi", "stringr", "survival", "tibble", "unmarked", "vegan", "viridis", "zoo"))
install.packages(c("AICcmodavg", "BH", "DBI", "Formula", "Hmisc", "MASS", "MasterBayes", "Matrix", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "Rvmmin", "ade4", "ape", "assertthat", "backports", "boot", "checkmate", "circular", "cluster", "corpcor", "cowplot", "cubature", "data.table", "deldir", "digest", "dplyr", "evaluate", "fastmatch", "fitdistrplus", "foreign", "formatR", "gamlss", "gamlss.dist", "gdata", "goftest", "gridExtra", "htmlTable", "htmltools", "httpuv", "igraph", "irlba", "jsonlite", "knitr", "lattice", "lme4", "lmomco", "markdown", "mgcv", "mvtnorm", "nlme", "pegas", "phangorn", "polyclip", "poppr", "poweRlaw", "pscl", "reshape", "rmarkdown", "rpart", "scales", "segmented", "seqinr", "shiny", "sourcetools", "sp", "spatstat", "spdep", "stringi", "stringr", "survival", "tibble", "unmarked", "vegan", "viridis", "zoo"))
install.packages(c("AICcmodavg", "BH", "DBI", "Formula", "Hmisc", "MASS", "MasterBayes", "Matrix", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "Rvmmin", "ade4", "ape", "assertthat", "backports", "boot", "checkmate", "circular", "cluster", "corpcor", "cowplot", "cubature", "data.table", "deldir", "digest", "dplyr", "evaluate", "fastmatch", "fitdistrplus", "foreign", "formatR", "gamlss", "gamlss.dist", "gdata", "goftest", "gridExtra", "htmlTable", "htmltools", "httpuv", "igraph", "irlba", "jsonlite", "knitr", "lattice", "lme4", "lmomco", "markdown", "mgcv", "mvtnorm", "nlme", "pegas", "phangorn", "polyclip", "poppr", "poweRlaw", "pscl", "reshape", "rmarkdown", "rpart", "scales", "segmented", "seqinr", "shiny", "sourcetools", "sp", "spatstat", "spdep", "stringi", "stringr", "survival", "tibble", "unmarked", "vegan", "viridis", "zoo"))
install.packages(c("AICcmodavg", "BH", "DBI", "Formula", "Hmisc", "MASS", "MasterBayes", "Matrix", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "Rvmmin", "ade4", "ape", "assertthat", "backports", "boot", "checkmate", "circular", "cluster", "corpcor", "cowplot", "cubature", "data.table", "deldir", "digest", "dplyr", "evaluate", "fastmatch", "fitdistrplus", "foreign", "formatR", "gamlss", "gamlss.dist", "gdata", "goftest", "gridExtra", "htmlTable", "htmltools", "httpuv", "igraph", "irlba", "jsonlite", "knitr", "lattice", "lme4", "lmomco", "markdown", "mgcv", "mvtnorm", "nlme", "pegas", "phangorn", "polyclip", "poppr", "poweRlaw", "pscl", "reshape", "rmarkdown", "rpart", "scales", "segmented", "seqinr", "shiny", "sourcetools", "sp", "spatstat", "spdep", "stringi", "stringr", "survival", "tibble", "unmarked", "vegan", "viridis", "zoo"))
install.packages(c("AICcmodavg", "BH", "DBI", "Formula", "Hmisc", "MASS", "MasterBayes", "Matrix", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "Rvmmin", "ade4", "ape", "assertthat", "backports", "boot", "checkmate", "circular", "cluster", "corpcor", "cowplot", "cubature", "data.table", "deldir", "digest", "dplyr", "evaluate", "fastmatch", "fitdistrplus", "foreign", "formatR", "gamlss", "gamlss.dist", "gdata", "goftest", "gridExtra", "htmlTable", "htmltools", "httpuv", "igraph", "irlba", "jsonlite", "knitr", "lattice", "lme4", "lmomco", "markdown", "mgcv", "mvtnorm", "nlme", "pegas", "phangorn", "polyclip", "poppr", "poweRlaw", "pscl", "reshape", "rmarkdown", "rpart", "scales", "segmented", "seqinr", "shiny", "sourcetools", "sp", "spatstat", "spdep", "stringi", "stringr", "survival", "tibble", "unmarked", "vegan", "viridis", "zoo"))
install.packages(c("AICcmodavg", "BH", "DBI", "Formula", "Hmisc", "MASS", "MasterBayes", "Matrix", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "Rvmmin", "ade4", "ape", "assertthat", "backports", "boot", "checkmate", "circular", "cluster", "corpcor", "cowplot", "cubature", "data.table", "deldir", "digest", "dplyr", "evaluate", "fastmatch", "fitdistrplus", "foreign", "formatR", "gamlss", "gamlss.dist", "gdata", "goftest", "gridExtra", "htmlTable", "htmltools", "httpuv", "igraph", "irlba", "jsonlite", "knitr", "lattice", "lme4", "lmomco", "markdown", "mgcv", "mvtnorm", "nlme", "pegas", "phangorn", "polyclip", "poppr", "poweRlaw", "pscl", "reshape", "rmarkdown", "rpart", "scales", "segmented", "seqinr", "shiny", "sourcetools", "sp", "spatstat", "spdep", "stringi", "stringr", "survival", "tibble", "unmarked", "vegan", "viridis", "zoo"))
install.packages(c("AICcmodavg", "BH", "DBI", "Formula", "Hmisc", "MASS", "MasterBayes", "Matrix", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "Rvmmin", "ade4", "ape", "assertthat", "backports", "boot", "checkmate", "circular", "cluster", "corpcor", "cowplot", "cubature", "data.table", "deldir", "digest", "dplyr", "evaluate", "fastmatch", "fitdistrplus", "foreign", "formatR", "gamlss", "gamlss.dist", "gdata", "goftest", "gridExtra", "htmlTable", "htmltools", "httpuv", "igraph", "irlba", "jsonlite", "knitr", "lattice", "lme4", "lmomco", "markdown", "mgcv", "mvtnorm", "nlme", "pegas", "phangorn", "polyclip", "poppr", "poweRlaw", "pscl", "reshape", "rmarkdown", "rpart", "scales", "segmented", "seqinr", "shiny", "sourcetools", "sp", "spatstat", "spdep", "stringi", "stringr", "survival", "tibble", "unmarked", "vegan", "viridis", "zoo"))
install.packages(c("AICcmodavg", "BH", "DBI", "Formula", "Hmisc", "MASS", "MasterBayes", "Matrix", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "Rvmmin", "ade4", "ape", "assertthat", "backports", "boot", "checkmate", "circular", "cluster", "corpcor", "cowplot", "cubature", "data.table", "deldir", "digest", "dplyr", "evaluate", "fastmatch", "fitdistrplus", "foreign", "formatR", "gamlss", "gamlss.dist", "gdata", "goftest", "gridExtra", "htmlTable", "htmltools", "httpuv", "igraph", "irlba", "jsonlite", "knitr", "lattice", "lme4", "lmomco", "markdown", "mgcv", "mvtnorm", "nlme", "pegas", "phangorn", "polyclip", "poppr", "poweRlaw", "pscl", "reshape", "rmarkdown", "rpart", "scales", "segmented", "seqinr", "shiny", "sourcetools", "sp", "spatstat", "spdep", "stringi", "stringr", "survival", "tibble", "unmarked", "vegan", "viridis", "zoo"))
install.packages("anim.plots")
library("anim.plots", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
anim.plot(-x^2, times = 1:30, n=100,speed = 5, from=-1,to=1)
x<-1:5
anim.plot(-x^2, times = 1:30, n=100,speed = 5, from=-1,to=1)
library(anim.plots)
library(anim.plots)
x<- rep(1:100/10,10)
y<- -x^2
anim.plot(x,y,times = 1:10)
x <- rep(1:100/10, 10)
times <- rep(1:10, each=100)
y <- sin(x*times/4)
anim.plot(x,y,times, type="l", col="orange", lwd=2)
anim.plot(x,y,times, type="l", lwd = 2)
anim.plot(x,y,times=2, type="l", lwd = 2)
anim.plot(x,y,times=1, type="l", lwd = 2)
gr1<-anim.plot(x,y,times=1, type="l", lwd = 2)
gr1
gr1
anim.plot(x,y,times=1, type="l", lwd = 2)
anim.plot(x,y,times=10, type="l", lwd = 2)
anim.plot(x,y,times=5, type="l", lwd = 2)
anim.plot(x,y,times=10, type="l", lwd = 2)
install.packages("flowCore")
install.packages("NPflow")
install.packages("OpenCyto")
install.packages(c("Rcpp", "RcppArmadillo", "adegenet", "backports", "checkmate", "data.table", "doParallel", "dplyr", "lme4", "pscl", "spatstat"))
install.packages("installr")
install.packages("instaR")
library("instaR", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
remove.packages("instaR")
install.packages("ade4")
install.packages("ggplot2")
install.packages("dplyr")
## try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite()
require(BiocInstaller) biocLite("openCyto")
require(BiocInstaller)
biocLite("openCyto")
ws<-openWorkspace("data/workspace/080 batch 0882.xml")
library("Biobase", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("BiocInstaller", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
require(BiocInstaller)
biocLite("openCyto")
library(Biobase)
library(BiocGenerics)
library(BiocInstaller)
require(BiocInstaller)
biocLite("openCyto")
biocLite("openCyto")
install.packages("devtools")
install_github("RGLab/opencytoCL")
defaults write org.R-project.R force.LANG en_US.UTF-8
biocLite("openCyto")
system('defaults write org.R-project.R force.LANG en_US.UTF-8')
library(Biobase)
library(BiocGenerics)
library(BiocInstaller)
require(BiocInstaller)
biocLite("openCyto")
install.packages("lme4")
system('defaults write org.R-project.R force.LANG en_US.UTF-8')
system('defaults write org.R-project.R force.LANG en_US.UTF-8')
load("~/Documents/Proyectos/Chamaedorea/Chamedorea pinnatifrons/Estadística/Fenologia pinnatifrons.RData")
library(ggplot2)
library(cowplot) #this library is to save the figure
#fitting the distribution of fruit production
library(fitdistrplus)
library(MASS)
library(lmtest)
library(lme4)
library(Hmisc)
correlaciones
library(Hmisc) #rcorr
RS <- read.csv("ER pinna.csv")
correlations <- RS[,3:14] #matrix for correlations
rcorr(as.matrix(correlations),type = "spearman")
#negative binomial model with inflorescences nested within individuals as random factors
#  I extracted the theta value from the fitting of the fruit production distribution
mod1c <- glmer(data=RS,fruts~height+leaves+malecl+femcl+femfiv+
census+sincH+sincM+nofl+(1|id/infl), family=(negative.binomial(mod1b$theta)))
# negative binomial model WITHOUT inflorescences nested within individuals as random factors
mod1b <- glm.nb(data=RS,fruts~height+leaves+malecl+femcl+femfiv+
census+sincM+sincH+nofl)
library(Hmisc) #rcorr
library(MASS) #glm.nb
library(lme4) #glmer
library(pscl) #zeroinfl
library(lmtest) #step
# Model with all the variables with a Poisson distribution
mod1a <- glmer(data=RS,fruts~height+leaves+malecl+femcl+femfiv+
census+sincH+sincM+nofl+(1|id/infl),family=poisson,control=glmerControl(optimizer="bobyqa"))
# negative binomial model WITHOUT inflorescences nested within individuals as random factors
mod1b <- glm.nb(data=RS,fruts~height+leaves+malecl+femcl+femfiv+
census+sincM+sincH+nofl)
#negative binomial model with inflorescences nested within individuals as random factors
#  I extracted the theta value from the fitting of the fruit production distribution
mod1c <- glmer(data=RS,fruts~height+leaves+malecl+femcl+femfiv+
census+sincH+sincM+nofl+(1|id/infl), family=(negative.binomial(mod1b$theta)))
RS <- read.csv("ER pinna.csv")
frutsno <-RS$nofl-RS$fruts
RS[,3:14]<-scale(RS[,3:14])
RS <- cbind(RS, frutsno)
# Model with all the variables with a Poisson distribution
mod1a <- glmer(data=RS,fruts~height+leaves+malecl+femcl+femfiv+
census+sincH+sincM+nofl+(1|id/infl),family=poisson,control=glmerControl(optimizer="bobyqa"))
# negative binomial model WITHOUT inflorescences nested within individuals as random factors
mod1b <- glm.nb(data=RS,fruts~height+leaves+malecl+femcl+femfiv+
census+sincM+sincH+nofl)
#negative binomial model with inflorescences nested within individuals as random factors
#  I extracted the theta value from the fitting of the fruit production distribution
mod1c <- glmer(data=RS,fruts~height+leaves+malecl+femcl+femfiv+
census+sincH+sincM+nofl+(1|id/infl), family=(negative.binomial(mod1b$theta)))
AIC(mod1a,mod1b,mod1c)
summary(mod1c)
mod1e<-update(mod1c, .~. -sincH)
mod1e<-update(mod1c, .~. -sincM)
AIC(mod1e,mod1c)
summary(mod1e)
correlations <- RS[,3:14] #matrix for correlations
rcorr(as.matrix(correlations),type = "spearman")
# Model with all the variables with a Poisson distribution
mod1a <- glmer(data=RS,fruts~height+leaves+malecl+femcl+
census+sincH+sincM+nofl+(1|id/infl),family=poisson,control=glmerControl(optimizer="bobyqa"))
# negative binomial model WITHOUT inflorescences nested within individuals as random factors
mod1b <- glm.nb(data=RS,fruts~height+leaves+malecl+femcl+
census+sincM+sincH+nofl)
#negative binomial model with inflorescences nested within individuals as random factors
#  I extracted the theta value from the fitting of the fruit production distribution
mod1c <- glmer(data=RS,fruts~height+leaves+malecl+femcl+
census+sincH+sincM+nofl+(1|id/infl), family=(negative.binomial(mod1b$theta)))
AIC(mod1a,mod1b,mod1c)
summary(mod1c)
mod1e<-update(mod1c, .~. -sincM)
summary(mod1e)
AIC(mod1e,mod1c)
anova(mod1e,mod1c)
mod1f <- update(mod1e, .~. -leaves)
anova(mod1f,mod1e)
AIC(mod1f,mod1e)
summary(mod1f)
mod1g <- update(mod1f, .~. -sincH)
anova(mod1f,mod1g)
AIC(mod1g,mod1f)
summary(mod1g)
mod1h <- update(mod1g, .~. -malecl)
anova(mod1h,mod1g)
AIC(mod1h,mod1g)
summary(mod1h)
summary(mod1h)
mod1i <- update(mod1h, .~. -femcl)
anova(mod1i,mod1h)
AIC(mod1i,mod1h)
summary(mod1i)
#with random effect and binomial distribution
mod2a <- glmer(data=RS,cbind(fruts,frutsno)~height+leaves+malecl+femcl+census+
sincM+sincH+(1|id/infl),family=binomial, control=glmerControl(optimizer="bobyqa"))
#without random effects
mod2b <- glm(data=RS,cbind(fruts,frutsno)~height+leaves+malecl+femcl+
census+sincM+sincH,family=binomial)
anova(mod2a,mod2b)
AIC(mod2a,mod2b)
summary(mod2a)
#model without sincH
mod2c <- update(mod2a, .~. -sincM)
anova(mod2a,mod2c)
AIC(mod2a,mod2c)
summary(mod2c)
step(mod2a)
#model without sincH
mod2c <- update(mod2a, .~. -sincM)
mod2d <- update(mod2c, .~. -femfiv)
AIC(mod2c,mod2d)
summary(mod2c)
mod2d <- update(mod2c, .~. -sincH)
anova(mod2c,mod2d)
AIC(mod2c,mod2d)
summary(mod2d)
summary(mod1i)
library(lme4) #glmer
#negative binomial model with inflorescences nested within individuals as random factors
#  I extracted the theta value from the fitting of the fruit production distribution
mod1c <- glmer(data=RS,fruts~height+leaves+malecl+femcl+
census+sincM+nofl+(1|id/infl), family=(negative.binomial(0.2996707)))
mod1e<-update(mod1c, .~. -census:sincM)
summary(mod1c)
mod1e<-update(mod1c, .~. -leaves)
summary(mod1e)
mod1f <- update(mod1e, .~. -sincM)
summary(mod1f)
mod1g <- update(mod1f, .~. -malecl)
summary(mod1g)
mod1h <- update(mod1g, .~. -femcl)
summary(mod1h)
citation()
RS <- read.csv("ER pinna.csv")
cor.test(RS$height,RS$fruts)
cor.test(RS$nofl,RS$fruts)
cor.test(RS$census,RS$fruts)
library(lme4) #glmer
#negative binomial model with inflorescences nested within individuals as random factors
#  I extracted the theta value from the fitting of the fruit production distribution
mod1c <- glmer(data=RS,fruts~height+leaves+malecl+femcl+
census+sincM+nofl+(1|id/infl), family=(negative.binomial(0.2996707)))
summary(mod1c)
anova(mod1e,mod1c)
AIC(mod1a,mod1b,mod1c) #model 1c is the chosen one because it makes the most biological sense
AIC(mod1e,mod1c)
AIC(mod1f,mod1e)
AIC(mod1g,mod1f)
AIC(mod1h,mod1g)
anova(mod1e,mod1c)
anova(mod1f,mod1e)
mod1e<-update(mod1c, .~. -leaves)
anova(mod1e,mod1c)
mod1f <- update(mod1e, .~. -sincM)
anova(mod1f,mod1e)
mod1e<-update(mod1c, .~. -leaves)
anova(mod1e,mod1c)
mod1f <- update(mod1e, .~. -sincM)
anova(mod1f,mod1e)
mod1g <- update(mod1f, .~. -malecl)
anova(mod1f,mod1g)
mod1h <- update(mod1g, .~. -femcl)
anova(mod1h,mod1g)
summary(mod1c)
summary(mod1e)
summary(mod1f)
summary(mod1g)
library(circular)
windc <- circular(wind, type=("angles"), units = ("radians"), template = ("geographics"))
plot(wind, pch=16, xlab="Observaciones", ylab= "dirección del viento (en radianes)")
plot(windc, cex=1, bin=720, stack=TRUE, sep=0.035, shrink=1.2, axes = F)
lepe <- read.delim("Lepechinia.txt")
pernettya <- read.delim("Pernettya.txt")
lepeC <- circular(lepe, type = ("angles"), units=("degrees"), template=("none"), modulo = ("asis"), rotation=("clock"))
pernettyaC <- circular(pernettya, type = ("angles"), units=("degrees"), template=("none"), modulo = ("asis"), rotation=("clock"))
rose.diag(lepeC, bins=11.5, col="darkorchid1", cex=1.5, prop=1.4, axes = F)
rose.diag(pernettyaC, bins=11.5, col="ivory", border=1, cex=1.5, prop=1.4, axes=F, add=T)
rose.diag(lepeC, bins=11.5, col="darkorchid1", cex=1.5, prop=1.4, axes = F)
rose.diag(pernettyaC, bins=11.5, col="ivory", border=1, cex=1.5, prop=1.4, axes=F, add=T)
rose.diag(lepeC, bins=11.5, col="darkorchid1", cex=1.5, prop=1.4, axes = F)
rose.diag(pernettyaC, bins=11.5, col="ivory", border=1, cex=1.5, prop=1.4, axes=F, add=T)
axis.circular(at=circular(seq(0, 11*pi/6,pi/6)), labels=c("E","D", "N","O","S","A","J","J","M","A","M","F"), cex=1.5)
rose.diag(lepeC, bins=11.5, col="darkorchid1", cex=1.5, prop=1.4, axes = F)
rose.diag(pernettyaC, bins=11.5, col="ivory", border=1, cex=1.5, prop=1.4, axes=F, add=T)
axis.circular(at=circular(seq(0, 11*pi/6,pi/6)), labels=c("E","D", "N","O","S","A","J","J","M","A","M","F"), cex=1.5)
rho.circular(lepeC)
rho.circular(x=lepeC)
rho.circular(x=lepeC,na.rm = TRUE)
rho.circular(x=pernettyaC,na.rm = TRUE)
source('~/.active-rstudio-document', echo=TRUE)
rm(list=ls())
getwd()
ls
getwd()
setwd("~/Users/luisdiegoriosreyes/GitHub/QB2019_Rios/2.Worksheets/3.RStudio")
setwd("~/GitHub/QB2019_Rios/2.Worksheets/3.RStudio")
sin(pi/4)*sqrt(2)
sin(pi/4)
boom<-sin(pi/4)
boom*sqrt(2)
sqrt(2)
rm(boom)
log(pi)
x <- rnorm(5, mean = 0, sd = 1)
w <- x*14
length(w)
rm(w)
rm(x)
x <- rnorm(5, mean = 0, sd = 1)
x
w <- x*14
w
k <- 5*x
d <- c(w[1:3],k[1:4])
d
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
v <- c(16.4,16,10.1,16.8,20.5,NA,20.2,13.1,24.8,20.2,25,20.5,30.5,31.4,27.1)
summary(v)
descriptive <- v %>% summarise("max" = max(v), "min"=min(v), "sum" = sum(v), "mean"=mean(v), "median"=median(v), "var"= var(v), "SD" = sd(v), "SE"=sd(v)/sqrt(length(v)))
library(dplyr)
descriptive <- v %>% summarise("max" = max(v), "min"=min(v), "sum" = sum(v), "mean"=mean(v), "median"=median(v), "var"= var(v), "SD" = sd(v), "SE"=sd(v)/sqrt(length(v)))
v <- c(16.4,16,10.1,16.8,20.5,NA,20.2,13.1,24.8,20.2,25,20.5,30.5,31.4,27.1)
library(dplyr)
descriptive <- v %>% summarise("max" = max(v), "min"=min(v), "sum" = sum(v), "mean"=mean(v), "median"=median(v), "var"= var(v), "SD" = sd(v), "SE"=sd(v)/sqrt(length(v)))
descriptive <- summarise("max" = max(v), "min"=min(v), "sum" = sum(v), "mean"=mean(v), "median"=median(v), "var"= var(v), "SD" = sd(v), "SE"=sd(v)/sqrt(length(v)))
v %>% summarise("max" = max(v), "min"=min(v), "sum" = sum(v), "mean"=mean(v), "median"=median(v), "var"= var(v), "SD" = sd(v), "SE"=sd(v)/sqrt(length(v)))
as.matrix(v)
v<-as.matrix(v)
v %>% summarise("max" = max(v), "min"=min(v), "sum" = sum(v), "mean"=mean(v), "median"=median(v), "var"= var(v), "SD" = sd(v), "SE"=sd(v)/sqrt(length(v)))
v <- c(16.4,16,10.1,16.8,20.5,NA,20.2,13.1,24.8,20.2,25,20.5,30.5,31.4,27.1)
max(v)
min(v)
sum(v)
mean(v)
median(v)
var(v)
sd(v)/sqrt(length(v)) # Standard Error of the mean
v <- c(16.4,16,10.1,16.8,20.5,NA,20.2,13.1,24.8,20.2,25,20.5,30.5,31.4,27.1)
max(v,na.rm = T)
min(v,na.rm = T)
sum(v,na.rm = T)
mean(v,na.rm = T)
median(v,na.rm = T)
var(v,na.rm = T)
sd(v,na.rm = T)/sqrt(length(v,na.rm = T)) # Standard Error of the mean
sd(v,na.rm = T)/sqrt(length(v)) # Standard Error of the mean
col1 <- rnorm(5, mean=8,sd=2)
col2 <- rnorm(5,mean=25,sd=10)
tarea1 <- cbind(col1,col2)
View(tarea1)
rm(tarea1)
rm(col1)
rm(col2)
rm(v)
?rnorm
load(matrix.txt)
m <- read.table("data/matrix.txt")
m <- t(m)
dim(m)
View(m)
View(m)
n<-m[-5,-3]
rm(m)
rm(n)
zooplankton <- read.table("data/zoops.txt")
View(zooplankton)
zooplankton <- read.table("data/zoops.txt",header = T)
View(zooplankton)
zooplankton <- read.table("data/zoop_nuts.txt",header = T)
View(zooplankton)
zooplankton <- read.table("data/nuts.txt",header = T)
View(zooplankton)
zooplankton <- read.table("data/matrix.txt",header = T)
View(zooplankton)
meso <- read.table("data/zoop_nuts.txt",header = T)
rm(zooplankton)
View(meso)
is.matrix(meso)
meso <- as.matrix(meso)
meso <- read.table("data/zoop_nuts.txt",header = T)
meso <- meso[,]
mesoMAT <- meso[,]
mesoMAT <- as.matrix(meso[,])
pairs(mesoMAT)
View(mesoMAT)
mesoMAT <- as.matrix(meso[,-2])
pairs(mesoMAT)
View(meso)
mesoMAT <- as.matrix(meso[,c(-1,-2)])
pairs(mesoMAT)
rm(mesoMAT)
cor1<- cor(meso.num)
meso.num <- as.matrix(meso[,c(-1,-2)])
cor1<- cor(meso.num)
cor(meso.num)
install.packages("psych")
library(psych)
cor3 <- corr.test(meso.num, method="pearson",adjust = "BH")
print(cor3, digits = 3)
cor4 <- corr.test(meso.num, method="spearman",adjust = "BH")
print(cor4, digits = 3)
pairs(meso.num)
meso.num <- as.matrix(meso[,c(-1,-2)])
pairs(meso.num)
cor1 <- cor(meso.num)
cor1
fitreg <- lm(ZP~TN, data=meso)
summary(fitreg)
plot(meso$TN, meso$ZP, ylim = c(0,10), xlim=c(500,5000),
xlab= expression(paste("Total Nitrogen (",mu,"g/L)")),
ylab= "Zooplancton Biomass (mg/L)",las=1)
text(meso$TN, meso$ZP, meso$NUTS, pos=3, cex= 0.8)
newTN <- seq(min(meso$TN), max(meso$TN), 10)
regline <- predict(fitreg, newdata = data.frame(TN=newTN))
lines(newTN, regline)
conf95 <- predict(fitreg, newdata = data.frame(TN=newTN),
interval = c("confidence"), level = 0.95, type= "response")
matlines(newTN, conf95[,c("lwr","upr")], type="l", lty = 2, lwd = 1, col = "black")
dist(meso$ZP)
hist(meso$ZP)
NUTS <- factor(meso$NUTS, levels = c('L','M','H'))
NUTS <- factor(meso$NUTS, levels = c('L','M','H'))
zp.means <- tapply(meso$ZP, NUTS, mean)
sem <- function(x){
sd(na.omit(x))/sqrt(length(na.omit(x)))
}
zp.sem <- tapply(meso$ZP, NUTS, sem)
bp <- barplot(zp.means, ylim = c(0, round(max(meso$ZP), digits = 0)),
pch = 15, cex = 1.25, las = 1, cex.lab = 1.4, cex.axis = 1.25,
xlab = "nutrient supply",
ylab = "zooplankton biomass (mg/L)",
names.arg = c("low","medium","high"))
arrows(x0 = bp, y0 = zp.means, y1 = zp.means - zp.sem, angle = 90,
length = 0.1, lwd = 1)
arrows(x0 = bp, y0 = zp.means, y1 = zp.means + zp.sem, angle = 90,
length = 0.1, lwd = 1)
fitanova <- aov(ZP ~ NUTS, data = meso)
summary(fitanova)
meso2 <- read.table("data/zoop.txt",header = T)
meso2 <- read.table("data/zoop.txt")
setwd("~/GitHub/QB2019_Rios/2.Worksheets/3.RStudio")
meso2 <- read.table("data/zoop.txt")
meso2 <- read.table("data/zoops.txt")
View(meso2)
meso2 <- read.table("data/zoops.txt",header = T)
View(meso2)
View(meso2)
meso2 <- read.table("data/zoops.txt",header = T)
meso2 <- as.matrix(meso2[,c(-1,-2)])
site <- as.factor(seq(24))
meso2 <- cbind(site,meso2)
View(meso2)
meso2 <- read.table("data/zoops.txt",header = T)
meso2 <- meso2[,c(-1,-2)]
site <- as.factor(seq(24))
meso2 <- cbind(site,meso2)
View(meso2)
